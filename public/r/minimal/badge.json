{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "A small count and labeling component used to highlight a status.",
  "files": [
    {
      "path": "registry/minimal/ui/badge.tsx",
      "content": "import * as React from 'react'\r\nimport { ark } from '@ark-ui/react/factory'\r\nimport { tv, type VariantProps } from 'tailwind-variants'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst badgeVariants = tv({\r\n  base: \"inline-flex items-center justify-center rounded-md text-xs border font-medium w-fit whitespace-nowrap shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  variants: {\r\n    variant: {\r\n      primary:\r\n        'border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90',\r\n      secondary:\r\n        'border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90',\r\n      destructive:\r\n        'border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n      outline:\r\n        'text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground',\r\n    },\r\n    size: {\r\n      sm: \"px-2 h-5 gap-1 [&_svg:not([class*='size-'])]:size-3\",\r\n      md: 'px-2.5 h-6 gap-1.5',\r\n      lg: 'px-3 h-7 gap-1.5',\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: 'primary',\r\n    size: 'md',\r\n  },\r\n})\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  size,\r\n  ...props\r\n}: React.ComponentProps<typeof ark.span> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  return (\r\n    <ark.span\r\n      data-scope=\"badge\"\r\n      className={cn(badgeVariants({ variant, size }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n",
      "type": "registry:ui"
    }
  ]
}