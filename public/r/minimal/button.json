{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "description": "Buttons allow users to perform actions and choose with a single tap.",
  "files": [
    {
      "path": "registry/minimal/ui/button.tsx",
      "content": "\"use client\"\r\n\r\nimport { forwardRef } from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { Loader2Icon } from \"lucide-react\"\r\nimport {\r\n  Button as ButtonPrimitive,\r\n  composeRenderProps,\r\n  type ButtonProps as ButtonPrimitiveProps,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  [\r\n    \"relative isolate inline-flex items-center justify-center whitespace-nowrap font-medium text-sm ring-offset-background transition-colors\",\r\n    \"focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n    \"hover:*:data-[slot=icon]:text-current/90 pressed:*:data-[slot=icon]:text-current *:data-[slot=icon]:my-1 [&_svg:not([class*='size-'])]:size-4 *:data-[slot=icon]:shrink-0 *:data-[slot=icon]:text-current/60 *:data-[slot=icon]:transition\",\r\n    \"*:data-[slot=avatar]:-mx-0.5 *:data-[slot=avatar]:my-1 *:data-[slot=avatar]:*:size-4 *:data-[slot=avatar]:size-4 *:data-[slot=avatar]:shrink-0\",\r\n  ],\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary:\r\n          \"bg-primary pressed:bg-primary/80 text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        secondary:\r\n          \"bg-secondary pressed:bg-secondary/70 text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        destructive:\r\n          \"bg-destructive pressed:bg-destructive/80 text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:bg-destructive/60 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"border bg-background pressed:bg-accent/80 pressed:text-accent-foreground shadow-xs hover:bg-accent hover:text-accent-foreground dark:border-input dark:bg-input/30 dark:hover:bg-input/50\",\r\n        ghost:\r\n          \"pressed:bg-accent/80 hover:bg-accent hover:text-accent-foreground dark:pressed:bg-accent/40 dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        xs: \"h-8 px-2.5 text-xs *:data-[icon-position=left]:mr-1.5 *:data-[icon-position=right]:ml-1.5 *:data-[slot=avatar]:*:size-3.5 *:data-[slot=avatar]:size-3.5 *:data-[slot=icon]:size-3\",\r\n        sm: \"h-9 px-3.5 text-sm *:data-[icon-position=left]:mr-1.5 *:data-[icon-position=right]:ml-1.5\",\r\n        md: \"h-10 px-4 text-sm *:data-[icon-position=left]:mr-2 *:data-[icon-position=right]:ml-2\",\r\n        lg: \"h-11 px-4.5 text-base *:data-[icon-position=left]:mr-2 *:data-[icon-position=right]:ml-2 sm:*:data-[slot=icon]:size-5\",\r\n        icon: \"size-9 shrink-0\",\r\n      },\r\n      shape: {\r\n        square: \"rounded-lg\",\r\n        circle: \"rounded-full\",\r\n      },\r\n      isPending: {\r\n        true: \"pointer-events-none opacity-50 *:data-[slot=icon]:hidden\",\r\n      },\r\n      isDisabled: {\r\n        true: \"pointer-events-none opacity-50\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      size: \"md\",\r\n      shape: \"square\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface ButtonProps\r\n  extends ButtonPrimitiveProps,\r\n    VariantProps<typeof buttonVariants> {\r\n  isPending?: boolean\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      size,\r\n      shape,\r\n      isPending,\r\n      isDisabled,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <ButtonPrimitive\r\n        ref={ref}\r\n        isPending={isPending}\r\n        isDisabled={isDisabled || isPending}\r\n        {...props}\r\n        className={composeRenderProps(className, (className, renderProps) =>\r\n          cn(\r\n            buttonVariants({ ...renderProps, variant, size, shape, className })\r\n          )\r\n        )}\r\n      >\r\n        {(values) => (\r\n          <>\r\n            {values.isPending && (\r\n              <Loader2Icon\r\n                className=\"size-4 shrink-0 animate-spin\"\r\n                aria-label=\"Loading...\"\r\n              />\r\n            )}\r\n            {typeof children === \"function\" ? children(values) : children}\r\n          </>\r\n        )}\r\n      </ButtonPrimitive>\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\nexport type { ButtonProps }\r\n",
      "type": "registry:ui"
    }
  ]
}